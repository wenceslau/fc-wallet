version: '3'

networks:
    walletnet:
        driver: bridge

services:
    db-mysql:
        image: mysql:5.7
        #platform: linux/amd64
        command: --innodb-use-native-aio=0
        container_name: db-mysql-wallet
        restart: always
        tty: true
        volumes:
            - ./mysql:/var/lib/mysql
        environment:
            - MYSQL_DATABASE=wallet
            - MYSQL_ROOT_PASSWORD=r00t
        networks:
            - walletnet
        ports:
            - "3306:3306"

    app-wallet-core:
        build:
            context: ./fc-wallet-core
        image: wenceslau/fc-wallet-core:latest
        container_name: wallet-core
        networks:
            - walletnet
        ports:
            - "3002:3002"
        depends_on:
            - db-mysql

    app-wallet-report:
        build:
            context: ./fc-wallet-report
        image: wenceslau/fc-wallet-report:latest
        container_name: wallet-report
        networks:
            - walletnet
        ports:
            - "3003:3003"
        depends_on:
            - db-mysql

    zookeeper:
        image: "confluentinc/cp-zookeeper:6.1.0"
        container_name: zookeeper
        networks:
            - walletnet
        ports:
            - 2181:2181
        environment:
            TZ: Sao_Paulo/Brazil
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000

    kafka:
        image: "confluentinc/cp-enterprise-kafka:6.1.0"
        container_name: kafka
        depends_on:
            - zookeeper
        networks:
            - walletnet
        ports:
            # Exposes 9092 for external connections to the broker
            # Use kafka:29092 for connections internal on the docker network
            # See https://rmoff.net/2018/08/02/kafka-listeners-explained/ for details
            - '9092:9092'
        environment:
            TZ: Sao_Paulo/Brazil
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
            KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
            KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
            KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
            CONFLUENT_METRICS_ENABLE: 'false'

    control-center:
        image: confluentinc/cp-enterprise-control-center:7.3.0
        hostname: control-center
        container_name: control-center
        networks:
            - walletnet
        depends_on:
            - kafka
        ports:
            - "9021:9021"
        environment:
            CONTROL_CENTER_BOOTSTRAP_SERVERS: 'kafka:29092'
            CONTROL_CENTER_REPLICATION_FACTOR: 1
            CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
            CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
            CONFLUENT_METRICS_TOPIC_REPLICATION: 1
            PORT: 9021


# docker compose up -d              = Execute docker compose without terminal
# docker compose down               = Stop all the containers from the file
# docker compose up -d --build      = Rebuild all the images and up the containers
# docker compose ps                 = List all containers from compose